# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and test

on: push

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Erster Schritt: Source-Code auschecken damit unsere Projekt-Dateien dem Job zur Verfügung stehen
      - uses: actions/checkout@v3
      # Zweiter Schritt: Der vordefinierte Job setup-java setzt eine Java-Umgebung inkl. Maven auf.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      # Als dritter Schritt führen wir den Maven-Build durch
      - name: Build with Maven, Run Tests, Package and Integration-Tests
        run: mvn verify

# name: Java CI with Maven

# on:
#  push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#  build:

#    runs-on: ubuntu-latest

#   steps:
#   - uses: actions/checkout@v3
#   - name: Set up JDK 17
#     uses: actions/setup-java@v3
#     with:
#       java-version: '17'
#       distribution: 'adopt'
#       cache: maven
#   - name: Build with Maven
#     run: mvn test
#   - name: jacoco-badge-generator
#     uses: cicirello/jacoco-badge-generator@v2
#   - name: Log coverage percentage
#     run: |
#       echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
#       echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
#   - name: Commit the badge (if it changed)
#     run: |
#       if [[ `git status --porcelain` ]]; then
#         git config user.name 'github-actions[bot]'
#         git config user.email 'github-actions[bot]@users.noreply.github.com'
# #         git add -A
#       git commit -m "Autogenerated JaCoCo coverage badge"
#         git push
#       fi
